{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/data.service.ts","webpack:///src/app/shopping-item/shopping-item.component.ts","webpack:///src/app/shopping-item/shopping-item.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DataService","http","get","map","res","json","newItem","headers","append","post","put","_id","providedIn","ShoppingItemComponent","dataService","shoppingItemList","toggleForm","getShoppingItems","subscribe","items","console","log","itemName","form","value","itemQuantity","itemBought","addShoppingItem","item","getItems","deleteShoppingItem","data","status","index","length","element","splice","selectedItem","updateShoppingItem","result","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'helloworld';\n}\n","<app-shopping-item></app-shopping-item>\n","import { BrowserModule } from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpModule} from '@angular/http';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ShoppingItemComponent } from './shopping-item/shopping-item.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ShoppingItemComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {Http,Response,Headers} from '@angular/http';\nimport 'rxjs/Rx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: Http) { }\n\n  getShoppingItems(){\n    return this.http.get('api/items')\n    .map(res => res.json());\n  }\n\n  addShoppingItem(newItem){\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post(\"api/item\", newItem, {headers: headers})\n    .map( res=> res.json());\n  }\n\n  deleteShoppingItem(id){\n    return this.http.delete(\"api/item/\" +id)\n  }\n\n  updateShoppingItem(newItem){\n\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.put(\"api/item/\" +newItem._id,newItem, {headers: headers})\n    .map(res => res.json());\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Item} from '../item';\nimport {DataService} from '../data.service';\n\n@Component({\n  selector: 'app-shopping-item',\n  templateUrl: './shopping-item.component.html',\n  styleUrls: ['./shopping-item.component.css'],\n  providers: [DataService]\n})\nexport class ShoppingItemComponent implements OnInit {\n  shoppingItemList:Item[]=[];\n  selectedItem: Item;\n  toggleForm: boolean = false;\n\nconstructor(private dataService: DataService) { }\n\n//gets item name data from database at index 0\n  getItems(){\n    this.dataService.getShoppingItems()\n    .subscribe(items =>{\n      this.shoppingItemList = items;\n      console.log(\"data from dataservice: \" + this.shoppingItemList[0].itemName);\n\n    });\n  }\n\n  addItem(form){\n    let newItem: Item ={\n      itemName: form.value.itemName,\n      itemQuantity: form.value.itemQuantity,\n      itemBought: false\n    }\n    this.toggleForm = !this.toggleForm;\n    this.toggleForm = !this.toggleForm;\n\n    this.dataService.addShoppingItem(newItem)\n    .subscribe(item => {\n      console.log(item);\n      this.getItems();\n\n    });\n}\n\n  deleteItem(id){\n    this.dataService.deleteShoppingItem(id)\n    .subscribe( data => {\n      console.log(data);\n      if (data.status== 200) {\n        for (let index = 0; index < this.shoppingItemList.length; index++) {\n          const element = this.shoppingItemList[index];\n          if (id == element._id) {\n            this.shoppingItemList.splice(index,1);\n\n          }\n\n        }\n\n      }\n    })\n  }\n\n  editItem(form){\n\n    let newItem: Item ={\n      _id: this.selectedItem._id,\n      itemName: form.value.itemName,\n      itemQuantity: form.value.itemQuantity,\n      itemBought: this.selectedItem.itemBought\n    }\n\n    this.dataService.updateShoppingItem(newItem)\n    .subscribe(result => {\n      console.log(\"original item to be updated from old value of: \" +result.itemQuantity);\n      this.getItems();\n\n    });\n    this.toggleForm = !this.toggleForm;\n  }\n\n  showEditForm(item){\n\n    this.selectedItem = item;\n    this.toggleForm = !this.toggleForm;\n  }\n\n  updateItemCheckbox(item){\n\n    item.itemBought = !item.itemBought;\n    this.dataService.updateShoppingItem(item)\n    .subscribe(result => {\n      console.log(\"original checkbox value of: \" +result.itemBought);\n      this.getItems();\n\n    });\n\n  }\n\n  // clearTextFields(){\n  //   <HTMLInputElement>document.getElementById(\"inputName\").value = \"\";\n  //   <HTMLInputElement>document.getElementById(\"inputQuantity\").value = \"\";\n  // }\n\n  ngOnInit(): void {\n    this.getItems();\n  }\n\n}\n","<!-- Form for user input to add items to list -->\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <title>Shopping List Web App</title>\n</head>\n\n<body>\n    <img src=\"https://cdn.giving.massgeneral.org/assets/HealthyHeart_Banner.jpg\" height=\"50%\" width=\"100%\" alt=\"Image of fruits and vegetables\">\n\n    <div class=\"body-content\">\n\n        <form #frm=\"ngForm\" (ngSubmit)=\"addItem(frm)\" *ngIf=\"!toggleForm\">\n            <h2>Add Item</h2>\n            <div class=\"form-group\">\n                <label for=\"\">\n                    Name:\n                </label>\n                <input type=\"text\" class=\"form-control\" name=\"itemName\" value=\"\" ngModel required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">\n                    Quantity:\n                </label>\n                <input type=\"number\" class=\"form-control\" name=\"itemQuantity\" value=\"\" ngModel required>\n                <br>\n                <button type=\"submit\" name=\"button\" class=\"btn btn-success\" [disabled]= frm.invalid>Add Item</button>\n            </div>\n        </form>\n\n        <!-- form to edit items -->\n\n        <form #editfrm=\"ngForm\" (ngSubmit)=\"editItem(editfrm)\" *ngIf=\"toggleForm\">\n            <h2>Edit Item</h2>\n            <div class=\"form-group\">\n                <label for=\"\">\n                    Name:\n                </label>\n                <input type=\"text\" class=\"form-control\" id=\"inputName\" name=\"itemName\" value=\"\" [ngModel]=\"selectedItem.itemName\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">\n                    Quantity:\n                </label>\n                <input type=\"number\" class=\"form-control\" id=\"inputQuantity\" name=\"itemQuantity\" value=\"\" [ngModel]=\"selectedItem.itemQuantity\">\n                <br>\n                <button type=\"submit\" name=\"button\" class=\"btn btn-success\" onclick=\"clearTextFields();\">Save</button>\n            </div>\n        </form>\n\n        <div class=\"container\">\n            <h2> Shopping List</h2>\n            <div class=\"row\">\n                <div *ngFor=\"let item of shoppingItemList\" class=\"\">\n\n                    <!--main page layout for user functionality-->\n\n                    <div class=\"col-md\">\n                        <input type=\"checkbox\" name=\"\" [checked]=\"item.itemBought\" (click)=\"updateItemCheckbox(item)\">\n                    </div>\n\n                    <div class=\"col-md\">\n                        {{item.itemName}}\n                    </div>\n\n                    <div class=\"col-md\">\n                        {{item.itemQuantity}}\n                    </div>\n\n                    <!--buttons for editing and deleting selected list item(s)-->\n\n                    <div class=\"col-md\">\n                        <button type=\"button\" name=\"editButton\" class=\"btn btn-primary\" (click)=\"showEditForm(item)\" [disabled]=\"toggleForm\">Edit</button>\n                    </div>\n\n                    <div class=\"col-md\">\n                        <button type=\"button\" name=\"deleteButton\" class=\"btn btn-danger\" (click)=\"deleteItem(item._id)\">Delete</button>\n                        <br>\n                        <br>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n</body>\n\n</html>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}