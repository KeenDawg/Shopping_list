{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data.service.ts","./src/app/shopping-item/shopping-item.component.ts","./src/app/shopping-item/shopping-item.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'helloworld';\n}\n","<app-shopping-item></app-shopping-item>\n","import { BrowserModule } from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpModule} from '@angular/http';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ShoppingItemComponent } from './shopping-item/shopping-item.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ShoppingItemComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {Http,Response,Headers} from '@angular/http';\nimport 'rxjs/Rx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: Http) { }\n\n  getShoppingItems(){\n    return this.http.get('api/items')\n    .map(res => res.json());\n  }\n\n  addShoppingItem(newItem){\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post(\"api/item\", newItem, {headers: headers})\n    .map( res=> res.json());\n  }\n\n  deleteShoppingItem(id){\n    return this.http.delete(\"api/item/\" +id)\n  }\n\n  updateShoppingItem(newItem){\n\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.put(\"api/item/\" +newItem._id,newItem, {headers: headers})\n    .map(res => res.json());\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Item} from '../item';\nimport {DataService} from '../data.service';\n\n@Component({\n  selector: 'app-shopping-item',\n  templateUrl: './shopping-item.component.html',\n  styleUrls: ['./shopping-item.component.css'],\n  providers: [DataService]\n})\nexport class ShoppingItemComponent implements OnInit {\n  shoppingItemList:Item[]=[];\n  selectedItem: Item;\n  toggleForm: boolean = false;\n\nconstructor(private dataService: DataService) { }\n\n//gets item name data from database at index 0\n  getItems(){\n    this.dataService.getShoppingItems()\n    .subscribe(items =>{\n      this.shoppingItemList = items;\n      //console.log(\"data from dataservice: \" + this.shoppingItemList[0].itemName);\n\n    });\n  }\n\n  addItem(form){\n    let newItem: Item ={\n      itemName: form.value.itemName,\n      itemQuantity: form.value.itemQuantity,\n      itemBought: false\n    }\n    this.toggleForm = !this.toggleForm;\n    this.toggleForm = !this.toggleForm;\n\n    this.dataService.addShoppingItem(newItem)\n    .subscribe(item => {\n      console.log(item);\n      this.getItems();\n\n    });\n}\n\n  deleteItem(id){\n    this.dataService.deleteShoppingItem(id)\n    .subscribe( data => {\n      console.log(data);\n      if (data.status== 200) {\n        for (let index = 0; index < this.shoppingItemList.length; index++) {\n          const element = this.shoppingItemList[index];\n          if (id == element._id) {\n            this.shoppingItemList.splice(index,1);\n\n          }\n\n        }\n\n      }\n    })\n  }\n\n  editItem(form){\n\n    let newItem: Item ={\n      _id: this.selectedItem._id,\n      itemName: form.value.itemName,\n      itemQuantity: form.value.itemQuantity,\n      itemBought: this.selectedItem.itemBought\n    }\n\n    this.dataService.updateShoppingItem(newItem)\n    .subscribe(result => {\n      console.log(\"original item to be updated from old value of: \" +result.itemQuantity);\n      this.getItems();\n\n    });\n    this.toggleForm = !this.toggleForm;\n  }\n\n  showEditForm(item){\n\n    this.selectedItem = item;\n    this.toggleForm = !this.toggleForm;\n  }\n\n  updateItemCheckbox(item){\n\n    item.itemBought = !item.itemBought;\n    this.dataService.updateShoppingItem(item)\n    .subscribe(result => {\n      console.log(\"original checkbox value of: \" +result.itemBought);\n      this.getItems();\n\n    });\n\n  }\n\n  // clearTextFields(){\n  //   <HTMLInputElement>document.getElementById(\"inputName\").value = \"\";\n  //   <HTMLInputElement>document.getElementById(\"inputQuantity\").value = \"\";\n  // }\n\n  ngOnInit(): void {\n    this.getItems();\n  }\n\n}\n","<!-- Form for user input to add items to list -->\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <title>Shopping List Web App</title>\n</head>\n\n<body>\n    <!--<img src=\"https://cdn.giving.massgeneral.org/assets/HealthyHeart_Banner.jpg\" height=\"200px\" width=\"100%\" alt=\"Image of fruits and vegetables\">\n    -->\n\n    <div class=\"topnav\">\n      <h2 class=\"navTitle\">Shopping tracker</h2>\n      <a href=\"/login\">Login</a>\n    </div>\n\n    <div class=\"body-content\">\n\n        <form #frm=\"ngForm\" (ngSubmit)=\"addItem(frm)\" *ngIf=\"!toggleForm\">\n            <h2>Add Item</h2>\n            <div class=\"form-group\">\n                <label for=\"\">\n                    Name:\n                </label>\n                <input type=\"text\" class=\"form-control\" name=\"itemName\" value=\"\" ngModel required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">\n                    Quantity:\n                </label>\n                <input type=\"number\" class=\"form-control\" name=\"itemQuantity\" value=\"\" ngModel required>\n                <br>\n                <button type=\"submit\" name=\"button\" class=\"btn btn-success\" [disabled]= frm.invalid>Add Item</button>\n            </div>\n        </form>\n\n        <!-- form to edit items -->\n\n        <form #editfrm=\"ngForm\" (ngSubmit)=\"editItem(editfrm)\" *ngIf=\"toggleForm\">\n            <h2>Edit Item</h2>\n            <div class=\"form-group\">\n                <label for=\"\">\n                    Name:\n                </label>\n                <input type=\"text\" class=\"form-control\" id=\"inputName\" name=\"itemName\" value=\"\" [ngModel]=\"selectedItem.itemName\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">\n                    Quantity:\n                </label>\n                <input type=\"number\" class=\"form-control\" id=\"inputQuantity\" name=\"itemQuantity\" value=\"\" [ngModel]=\"selectedItem.itemQuantity\">\n                <br>\n                <button type=\"submit\" name=\"button\" class=\"btn btn-success\" onclick=\"clearTextFields();\">Save</button>\n            </div>\n        </form>\n\n        <div class=\"container\">\n            <h2> Shopping List</h2>\n            <div class=\"row\">\n                <div *ngFor=\"let item of shoppingItemList\" class=\"\">\n\n                    <!--main page layout for user functionality-->\n\n                    <div class=\"col-md\">\n                        <input type=\"checkbox\" name=\"\" [checked]=\"item.itemBought\" (click)=\"updateItemCheckbox(item)\">\n                    </div>\n\n                    <div class=\"col-md\">\n                        {{item.itemName}}\n                    </div>\n\n                    <div class=\"col-md\">\n                        {{item.itemQuantity}}\n                    </div>\n\n                    <!--buttons for editing and deleting selected list item(s)-->\n\n                    <div class=\"col-md\">\n                        <button type=\"button\" name=\"editButton\" class=\"btn btn-primary\" (click)=\"showEditForm(item)\" [disabled]=\"toggleForm\">Edit</button>\n                    </div>\n\n                    <div class=\"col-md\">\n                        <button type=\"button\" name=\"deleteButton\" class=\"btn btn-danger\" (click)=\"deleteItem(item._id)\">Delete</button>\n                        <br>\n                        <br>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n</body>\n\n</html>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}